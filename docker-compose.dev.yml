version: "3"

services:
  # api:
  #   container_name: api
  #   build:
  #     context: ./backend
  #     dockerfile: server/Dockerfile
  #   volumes:
  #     - ./backend:/app
  #   env_file:
  #     - ./backend/.env.local
  #   environment:
  #     PORT: 8080
  #     FRONT_ENDPOINT: http://localhost:3000
  #   ports:
  #     - 8080:8080
  #   networks:
  #     - backend
  #   depends_on:
  #     - phpmyadmin

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    command: yarn dev
    # depends_on:
    #   - api

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    environment:
      URL:
      SWAGGER_JSON: /api/docs/api-document.yaml
    volumes:
      - ./docs/api-document.yaml:/api/docs/api-document.yaml:ro
    ports:
      - "127.0.0.1:8081:8080"

  mysql:
    image: mysql:8.0.27
    platform: linux/amd64
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: db
      TZ: "Asia/Tokyo"
    volumes:
      - db-data:/var/lib/mysql
      - ./initdb:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin
    depends_on:
      - mysql
    environment:
      - PMA_HOSTS=mysql
    ports:
      - "3001:80"

volumes:
  db-data:
# networks:
#   backend:
