openapi: 3.0.2
info:
  title: "API"
  version: "2.0.0"
servers:
  - url: "http://localhost:8080"
    description: "Development server"
  - url: "http://localhost:3000"
    description: "Testing server"
security:
  - Bearer: []
tags:
  - name: "user"
    description: "Operations about user"
paths:
  /signUp:
    post:
      tags:
        - user
      summary: "Sign up a new user"
      description: "Allows a new user to sign up using their email and password."
      security: [] # No security required
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
            example:
              email: "new@ex.com"
              name: "newUser"
              password: "password"
      responses:
        "200":
          description: "Successful sign up"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
              example:
                id: "a3b0f9a0-e9c3-4ff4-b3fa-65f8a4f1f2a5"
                localId: "firebase-uid-1234"
                email: "newuser@example.com"
                name: "newUser"
                idToken: "id-token-string"
                refreshToken: "refresh-token-string"
                expiresIn: "3600"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /signIn:
    post:
      tags:
        - user
      summary: "Sign in a user"
      description: "Allows a user to sign in using their email and password."
      security: [] # No security required
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: "User's email"
                  example: "new@ex.com"
                password:
                  type: string
                  description: "User's password"
                  example: "password"
              required:
                - email
                - password
      responses:
        "200":
          description: "Successful sign in"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
              example:
                id: "a3b0f9a0-e9c3-4ff4-b3fa-65f8a4f1f2a5"
                localId: "firebase-uid-1234"
                email: "user@ex.com"
                name: "newUser"
                idToken: "id-token-string"
                refreshToken: "refresh-token-string"
                expiresIn: "3600"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /user/delete:
    delete:
      tags:
        - user
      summary: "Delete a user"
      description: "Allows a user to delete their account."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: "User's unique internal ID"
                  example: "a3b0f9a0-e9c3-4ff4-b3fa-65f8a4f1f2a5"
              required:
                - id
      responses:
        "200":
          description: "Successful deletion"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Success message"
                example:
                  message: "User deleted successfully"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"
components:
  schemas:
    UserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: "User's email"
          example: "newuser@example.com"
        name:
          type: string
          description: "User's name"
          example: "newUser"
        password:
          type: string
          description: "User's password"
          example: "securepassword"
      required:
        - email
        - name
        - password
    UserResponse:
      type: object
      properties:
        id:
          type: string
          description: "Newly created user's unique internal ID"
          example: "a3b0f9a0-e9c3-4ff4-b3fa-65f8a4f1f2a5"
        localId:
          type: string
          description: "Firebase UID (unique identifier)"
          example: "firebase-uid-1234"
        email:
          type: string
          description: "Email of the newly signed up user"
          example: "newuser@example.com"
        name:
          type: string
          description: "Name of the newly signed up user"
          example: "newUser"
        idToken:
          type: string
          description: "Firebase ID token"
          example: "id-token-string"
        refreshToken:
          type: string
          description: "Firebase refresh token"
          example: "refresh-token-string"
        expiresIn:
          type: string
          description: "Token expiration time in seconds"
          example: "3600"
      required:
        - id
        - localId
        - email
        - name
        - idToken
        - refreshToken
        - expiresIn
  responses:
    BadRequest:
      description: "Bad request"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: "Error message"
          example:
            message: "Invalid request payload"

    InternalServerError:
      description: "Internal server error"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: "Error message"
          example:
            message: "Internal server error"
